// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: blocksapi/stream.proto

package pb_blocksapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines initial stream seek behavior for given target message ID
type ReceiveBlocksRequest_StartPolicy int32

const (
	// Start on earliest available message
	ReceiveBlocksRequest_START_ON_EARLIEST_AVAILABLE ReceiveBlocksRequest_StartPolicy = 0
	// Start on latest available message
	ReceiveBlocksRequest_START_ON_LATEST_AVAILABLE ReceiveBlocksRequest_StartPolicy = 1
	// Start exactly on target, return error if no such target
	ReceiveBlocksRequest_START_EXACTLY_ON_TARGET ReceiveBlocksRequest_StartPolicy = 2
	// Start on message which comes exactly after target, return error if no such target
	ReceiveBlocksRequest_START_EXACTLY_AFTER_TARGET ReceiveBlocksRequest_StartPolicy = 3
	// Start on earliest available message that is greater or equal to target
	ReceiveBlocksRequest_START_ON_CLOSEST_TO_TARGET ReceiveBlocksRequest_StartPolicy = 4
	// Start on earliest available message that is strictly greater than target
	ReceiveBlocksRequest_START_ON_EARLIEST_AFTER_TARGET ReceiveBlocksRequest_StartPolicy = 5
)

// Enum value maps for ReceiveBlocksRequest_StartPolicy.
var (
	ReceiveBlocksRequest_StartPolicy_name = map[int32]string{
		0: "START_ON_EARLIEST_AVAILABLE",
		1: "START_ON_LATEST_AVAILABLE",
		2: "START_EXACTLY_ON_TARGET",
		3: "START_EXACTLY_AFTER_TARGET",
		4: "START_ON_CLOSEST_TO_TARGET",
		5: "START_ON_EARLIEST_AFTER_TARGET",
	}
	ReceiveBlocksRequest_StartPolicy_value = map[string]int32{
		"START_ON_EARLIEST_AVAILABLE":    0,
		"START_ON_LATEST_AVAILABLE":      1,
		"START_EXACTLY_ON_TARGET":        2,
		"START_EXACTLY_AFTER_TARGET":     3,
		"START_ON_CLOSEST_TO_TARGET":     4,
		"START_ON_EARLIEST_AFTER_TARGET": 5,
	}
)

func (x ReceiveBlocksRequest_StartPolicy) Enum() *ReceiveBlocksRequest_StartPolicy {
	p := new(ReceiveBlocksRequest_StartPolicy)
	*p = x
	return p
}

func (x ReceiveBlocksRequest_StartPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReceiveBlocksRequest_StartPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_blocksapi_stream_proto_enumTypes[0].Descriptor()
}

func (ReceiveBlocksRequest_StartPolicy) Type() protoreflect.EnumType {
	return &file_blocksapi_stream_proto_enumTypes[0]
}

func (x ReceiveBlocksRequest_StartPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReceiveBlocksRequest_StartPolicy.Descriptor instead.
func (ReceiveBlocksRequest_StartPolicy) EnumDescriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{2, 0}
}

// Defines how service should behave if start target is not yet available
type ReceiveBlocksRequest_CatchupPolicy int32

const (
	// Return error if catch up needed
	ReceiveBlocksRequest_CATCHUP_PANIC ReceiveBlocksRequest_CatchupPolicy = 0
	// Don't send anything until catch up
	ReceiveBlocksRequest_CATCHUP_WAIT ReceiveBlocksRequest_CatchupPolicy = 1
	// Stream normally from whatever is available before start target
	ReceiveBlocksRequest_CATCHUP_STREAM ReceiveBlocksRequest_CatchupPolicy = 2
)

// Enum value maps for ReceiveBlocksRequest_CatchupPolicy.
var (
	ReceiveBlocksRequest_CatchupPolicy_name = map[int32]string{
		0: "CATCHUP_PANIC",
		1: "CATCHUP_WAIT",
		2: "CATCHUP_STREAM",
	}
	ReceiveBlocksRequest_CatchupPolicy_value = map[string]int32{
		"CATCHUP_PANIC":  0,
		"CATCHUP_WAIT":   1,
		"CATCHUP_STREAM": 2,
	}
)

func (x ReceiveBlocksRequest_CatchupPolicy) Enum() *ReceiveBlocksRequest_CatchupPolicy {
	p := new(ReceiveBlocksRequest_CatchupPolicy)
	*p = x
	return p
}

func (x ReceiveBlocksRequest_CatchupPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReceiveBlocksRequest_CatchupPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_blocksapi_stream_proto_enumTypes[1].Descriptor()
}

func (ReceiveBlocksRequest_CatchupPolicy) Type() protoreflect.EnumType {
	return &file_blocksapi_stream_proto_enumTypes[1]
}

func (x ReceiveBlocksRequest_CatchupPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReceiveBlocksRequest_CatchupPolicy.Descriptor instead.
func (ReceiveBlocksRequest_CatchupPolicy) EnumDescriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{2, 1}
}

// Defines when stream has to stop
type ReceiveBlocksRequest_StopPolicy int32

const (
	// Follow new blocks
	ReceiveBlocksRequest_STOP_NEVER ReceiveBlocksRequest_StopPolicy = 0
	// Don't send messages greater than target
	ReceiveBlocksRequest_STOP_AFTER_TARGET ReceiveBlocksRequest_StopPolicy = 1
	// Don't send messages greater or equal to target
	ReceiveBlocksRequest_STOP_BEFORE_TARGET ReceiveBlocksRequest_StopPolicy = 2
)

// Enum value maps for ReceiveBlocksRequest_StopPolicy.
var (
	ReceiveBlocksRequest_StopPolicy_name = map[int32]string{
		0: "STOP_NEVER",
		1: "STOP_AFTER_TARGET",
		2: "STOP_BEFORE_TARGET",
	}
	ReceiveBlocksRequest_StopPolicy_value = map[string]int32{
		"STOP_NEVER":         0,
		"STOP_AFTER_TARGET":  1,
		"STOP_BEFORE_TARGET": 2,
	}
)

func (x ReceiveBlocksRequest_StopPolicy) Enum() *ReceiveBlocksRequest_StopPolicy {
	p := new(ReceiveBlocksRequest_StopPolicy)
	*p = x
	return p
}

func (x ReceiveBlocksRequest_StopPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReceiveBlocksRequest_StopPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_blocksapi_stream_proto_enumTypes[2].Descriptor()
}

func (ReceiveBlocksRequest_StopPolicy) Type() protoreflect.EnumType {
	return &file_blocksapi_stream_proto_enumTypes[2]
}

func (x ReceiveBlocksRequest_StopPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReceiveBlocksRequest_StopPolicy.Descriptor instead.
func (ReceiveBlocksRequest_StopPolicy) EnumDescriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{2, 2}
}

type ReceiveBlocksResponse_Error_Kind int32

const (
	// Default error class
	ReceiveBlocksResponse_Error_UNKNOWN ReceiveBlocksResponse_Error_Kind = 0
	// Catch up required, but catchup policy is PANIC
	ReceiveBlocksResponse_Error_CATCHUP_REQUIRED ReceiveBlocksResponse_Error_Kind = 1
	// Request is constructed in a wrong way
	ReceiveBlocksResponse_Error_BAD_REQUEST ReceiveBlocksResponse_Error_Kind = 2
)

// Enum value maps for ReceiveBlocksResponse_Error_Kind.
var (
	ReceiveBlocksResponse_Error_Kind_name = map[int32]string{
		0: "UNKNOWN",
		1: "CATCHUP_REQUIRED",
		2: "BAD_REQUEST",
	}
	ReceiveBlocksResponse_Error_Kind_value = map[string]int32{
		"UNKNOWN":          0,
		"CATCHUP_REQUIRED": 1,
		"BAD_REQUEST":      2,
	}
)

func (x ReceiveBlocksResponse_Error_Kind) Enum() *ReceiveBlocksResponse_Error_Kind {
	p := new(ReceiveBlocksResponse_Error_Kind)
	*p = x
	return p
}

func (x ReceiveBlocksResponse_Error_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReceiveBlocksResponse_Error_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_blocksapi_stream_proto_enumTypes[3].Descriptor()
}

func (ReceiveBlocksResponse_Error_Kind) Type() protoreflect.EnumType {
	return &file_blocksapi_stream_proto_enumTypes[3]
}

func (x ReceiveBlocksResponse_Error_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReceiveBlocksResponse_Error_Kind.Descriptor instead.
func (ReceiveBlocksResponse_Error_Kind) EnumDescriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{3, 2, 0}
}

type BlockStreamFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to HeadersFilter:
	//
	//	*BlockStreamFilter_ExcludeHeaders
	HeadersFilter isBlockStreamFilter_HeadersFilter `protobuf_oneof:"headers_filter"`
	// Types that are assignable to ShardsFilter:
	//
	//	*BlockStreamFilter_ExcludeAllShards
	//	*BlockStreamFilter_IncludeShardList
	//	*BlockStreamFilter_ExcludeShardList
	ShardsFilter isBlockStreamFilter_ShardsFilter `protobuf_oneof:"shards_filter"`
}

func (x *BlockStreamFilter) Reset() {
	*x = BlockStreamFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocksapi_stream_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStreamFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStreamFilter) ProtoMessage() {}

func (x *BlockStreamFilter) ProtoReflect() protoreflect.Message {
	mi := &file_blocksapi_stream_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStreamFilter.ProtoReflect.Descriptor instead.
func (*BlockStreamFilter) Descriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{0}
}

func (m *BlockStreamFilter) GetHeadersFilter() isBlockStreamFilter_HeadersFilter {
	if m != nil {
		return m.HeadersFilter
	}
	return nil
}

func (x *BlockStreamFilter) GetExcludeHeaders() *emptypb.Empty {
	if x, ok := x.GetHeadersFilter().(*BlockStreamFilter_ExcludeHeaders); ok {
		return x.ExcludeHeaders
	}
	return nil
}

func (m *BlockStreamFilter) GetShardsFilter() isBlockStreamFilter_ShardsFilter {
	if m != nil {
		return m.ShardsFilter
	}
	return nil
}

func (x *BlockStreamFilter) GetExcludeAllShards() *emptypb.Empty {
	if x, ok := x.GetShardsFilter().(*BlockStreamFilter_ExcludeAllShards); ok {
		return x.ExcludeAllShards
	}
	return nil
}

func (x *BlockStreamFilter) GetIncludeShardList() *BlockStreamFilter_ShardList {
	if x, ok := x.GetShardsFilter().(*BlockStreamFilter_IncludeShardList); ok {
		return x.IncludeShardList
	}
	return nil
}

func (x *BlockStreamFilter) GetExcludeShardList() *BlockStreamFilter_ShardList {
	if x, ok := x.GetShardsFilter().(*BlockStreamFilter_ExcludeShardList); ok {
		return x.ExcludeShardList
	}
	return nil
}

type isBlockStreamFilter_HeadersFilter interface {
	isBlockStreamFilter_HeadersFilter()
}

type BlockStreamFilter_ExcludeHeaders struct {
	ExcludeHeaders *emptypb.Empty `protobuf:"bytes,1,opt,name=exclude_headers,json=excludeHeaders,proto3,oneof"`
}

func (*BlockStreamFilter_ExcludeHeaders) isBlockStreamFilter_HeadersFilter() {}

type isBlockStreamFilter_ShardsFilter interface {
	isBlockStreamFilter_ShardsFilter()
}

type BlockStreamFilter_ExcludeAllShards struct {
	ExcludeAllShards *emptypb.Empty `protobuf:"bytes,2,opt,name=exclude_all_shards,json=excludeAllShards,proto3,oneof"`
}

type BlockStreamFilter_IncludeShardList struct {
	IncludeShardList *BlockStreamFilter_ShardList `protobuf:"bytes,3,opt,name=include_shard_list,json=includeShardList,proto3,oneof"`
}

type BlockStreamFilter_ExcludeShardList struct {
	ExcludeShardList *BlockStreamFilter_ShardList `protobuf:"bytes,4,opt,name=exclude_shard_list,json=excludeShardList,proto3,oneof"`
}

func (*BlockStreamFilter_ExcludeAllShards) isBlockStreamFilter_ShardsFilter() {}

func (*BlockStreamFilter_IncludeShardList) isBlockStreamFilter_ShardsFilter() {}

func (*BlockStreamFilter_ExcludeShardList) isBlockStreamFilter_ShardsFilter() {}

type BlockStreamDeliverySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter  *BlockStreamFilter            `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Content *BlockMessageDeliverySettings `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *BlockStreamDeliverySettings) Reset() {
	*x = BlockStreamDeliverySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocksapi_stream_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStreamDeliverySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStreamDeliverySettings) ProtoMessage() {}

func (x *BlockStreamDeliverySettings) ProtoReflect() protoreflect.Message {
	mi := &file_blocksapi_stream_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStreamDeliverySettings.ProtoReflect.Descriptor instead.
func (*BlockStreamDeliverySettings) Descriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{1}
}

func (x *BlockStreamDeliverySettings) GetFilter() *BlockStreamFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *BlockStreamDeliverySettings) GetContent() *BlockMessageDeliverySettings {
	if x != nil {
		return x.Content
	}
	return nil
}

type ReceiveBlocksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreamName       string                             `protobuf:"bytes,1,opt,name=stream_name,json=streamName,proto3" json:"stream_name,omitempty"`
	StartPolicy      ReceiveBlocksRequest_StartPolicy   `protobuf:"varint,2,opt,name=start_policy,json=startPolicy,proto3,enum=borealis.blocksapi.ReceiveBlocksRequest_StartPolicy" json:"start_policy,omitempty"`
	StartTarget      *BlockMessage_ID                   `protobuf:"bytes,3,opt,name=start_target,json=startTarget,proto3,oneof" json:"start_target,omitempty"`
	StopPolicy       ReceiveBlocksRequest_StopPolicy    `protobuf:"varint,4,opt,name=stop_policy,json=stopPolicy,proto3,enum=borealis.blocksapi.ReceiveBlocksRequest_StopPolicy" json:"stop_policy,omitempty"`
	StopTarget       *BlockMessage_ID                   `protobuf:"bytes,5,opt,name=stop_target,json=stopTarget,proto3,oneof" json:"stop_target,omitempty"`
	DeliverySettings *BlockStreamDeliverySettings       `protobuf:"bytes,6,opt,name=delivery_settings,json=deliverySettings,proto3" json:"delivery_settings,omitempty"`
	CatchupPolicy    ReceiveBlocksRequest_CatchupPolicy `protobuf:"varint,7,opt,name=catchup_policy,json=catchupPolicy,proto3,enum=borealis.blocksapi.ReceiveBlocksRequest_CatchupPolicy" json:"catchup_policy,omitempty"`
	// If not provided - default delivery settings are used during catchup
	CatchupDeliverySettings *BlockStreamDeliverySettings `protobuf:"bytes,8,opt,name=catchup_delivery_settings,json=catchupDeliverySettings,proto3,oneof" json:"catchup_delivery_settings,omitempty"`
}

func (x *ReceiveBlocksRequest) Reset() {
	*x = ReceiveBlocksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocksapi_stream_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveBlocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveBlocksRequest) ProtoMessage() {}

func (x *ReceiveBlocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blocksapi_stream_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveBlocksRequest.ProtoReflect.Descriptor instead.
func (*ReceiveBlocksRequest) Descriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{2}
}

func (x *ReceiveBlocksRequest) GetStreamName() string {
	if x != nil {
		return x.StreamName
	}
	return ""
}

func (x *ReceiveBlocksRequest) GetStartPolicy() ReceiveBlocksRequest_StartPolicy {
	if x != nil {
		return x.StartPolicy
	}
	return ReceiveBlocksRequest_START_ON_EARLIEST_AVAILABLE
}

func (x *ReceiveBlocksRequest) GetStartTarget() *BlockMessage_ID {
	if x != nil {
		return x.StartTarget
	}
	return nil
}

func (x *ReceiveBlocksRequest) GetStopPolicy() ReceiveBlocksRequest_StopPolicy {
	if x != nil {
		return x.StopPolicy
	}
	return ReceiveBlocksRequest_STOP_NEVER
}

func (x *ReceiveBlocksRequest) GetStopTarget() *BlockMessage_ID {
	if x != nil {
		return x.StopTarget
	}
	return nil
}

func (x *ReceiveBlocksRequest) GetDeliverySettings() *BlockStreamDeliverySettings {
	if x != nil {
		return x.DeliverySettings
	}
	return nil
}

func (x *ReceiveBlocksRequest) GetCatchupPolicy() ReceiveBlocksRequest_CatchupPolicy {
	if x != nil {
		return x.CatchupPolicy
	}
	return ReceiveBlocksRequest_CATCHUP_PANIC
}

func (x *ReceiveBlocksRequest) GetCatchupDeliverySettings() *BlockStreamDeliverySettings {
	if x != nil {
		return x.CatchupDeliverySettings
	}
	return nil
}

type ReceiveBlocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*ReceiveBlocksResponse_Message
	//	*ReceiveBlocksResponse_Done_
	//	*ReceiveBlocksResponse_Error_
	Response isReceiveBlocksResponse_Response `protobuf_oneof:"response"`
}

func (x *ReceiveBlocksResponse) Reset() {
	*x = ReceiveBlocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocksapi_stream_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveBlocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveBlocksResponse) ProtoMessage() {}

func (x *ReceiveBlocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blocksapi_stream_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveBlocksResponse.ProtoReflect.Descriptor instead.
func (*ReceiveBlocksResponse) Descriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{3}
}

func (m *ReceiveBlocksResponse) GetResponse() isReceiveBlocksResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ReceiveBlocksResponse) GetMessage() *ReceiveBlocksResponse_Result {
	if x, ok := x.GetResponse().(*ReceiveBlocksResponse_Message); ok {
		return x.Message
	}
	return nil
}

func (x *ReceiveBlocksResponse) GetDone() *ReceiveBlocksResponse_Done {
	if x, ok := x.GetResponse().(*ReceiveBlocksResponse_Done_); ok {
		return x.Done
	}
	return nil
}

func (x *ReceiveBlocksResponse) GetError() *ReceiveBlocksResponse_Error {
	if x, ok := x.GetResponse().(*ReceiveBlocksResponse_Error_); ok {
		return x.Error
	}
	return nil
}

type isReceiveBlocksResponse_Response interface {
	isReceiveBlocksResponse_Response()
}

type ReceiveBlocksResponse_Message struct {
	Message *ReceiveBlocksResponse_Result `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

type ReceiveBlocksResponse_Done_ struct {
	Done *ReceiveBlocksResponse_Done `protobuf:"bytes,2,opt,name=done,proto3,oneof"`
}

type ReceiveBlocksResponse_Error_ struct {
	Error *ReceiveBlocksResponse_Error `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*ReceiveBlocksResponse_Message) isReceiveBlocksResponse_Response() {}

func (*ReceiveBlocksResponse_Done_) isReceiveBlocksResponse_Response() {}

func (*ReceiveBlocksResponse_Error_) isReceiveBlocksResponse_Response() {}

type BlockStreamFilter_ShardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shards []uint64 `protobuf:"varint,1,rep,packed,name=shards,proto3" json:"shards,omitempty"`
}

func (x *BlockStreamFilter_ShardList) Reset() {
	*x = BlockStreamFilter_ShardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocksapi_stream_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockStreamFilter_ShardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockStreamFilter_ShardList) ProtoMessage() {}

func (x *BlockStreamFilter_ShardList) ProtoReflect() protoreflect.Message {
	mi := &file_blocksapi_stream_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockStreamFilter_ShardList.ProtoReflect.Descriptor instead.
func (*BlockStreamFilter_ShardList) Descriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BlockStreamFilter_ShardList) GetShards() []uint64 {
	if x != nil {
		return x.Shards
	}
	return nil
}

type ReceiveBlocksResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message           *BlockMessage `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	CatchupInProgress bool          `protobuf:"varint,2,opt,name=catchup_in_progress,json=catchupInProgress,proto3" json:"catchup_in_progress,omitempty"` // TODO: maybe add auxiliary info that helps understanding distance to latest block
}

func (x *ReceiveBlocksResponse_Result) Reset() {
	*x = ReceiveBlocksResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocksapi_stream_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveBlocksResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveBlocksResponse_Result) ProtoMessage() {}

func (x *ReceiveBlocksResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_blocksapi_stream_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveBlocksResponse_Result.ProtoReflect.Descriptor instead.
func (*ReceiveBlocksResponse_Result) Descriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ReceiveBlocksResponse_Result) GetMessage() *BlockMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ReceiveBlocksResponse_Result) GetCatchupInProgress() bool {
	if x != nil {
		return x.CatchupInProgress
	}
	return false
}

type ReceiveBlocksResponse_Done struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ReceiveBlocksResponse_Done) Reset() {
	*x = ReceiveBlocksResponse_Done{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocksapi_stream_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveBlocksResponse_Done) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveBlocksResponse_Done) ProtoMessage() {}

func (x *ReceiveBlocksResponse_Done) ProtoReflect() protoreflect.Message {
	mi := &file_blocksapi_stream_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveBlocksResponse_Done.ProtoReflect.Descriptor instead.
func (*ReceiveBlocksResponse_Done) Descriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{3, 1}
}

func (x *ReceiveBlocksResponse_Done) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ReceiveBlocksResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind        ReceiveBlocksResponse_Error_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=borealis.blocksapi.ReceiveBlocksResponse_Error_Kind" json:"kind,omitempty"`
	Description string                           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ReceiveBlocksResponse_Error) Reset() {
	*x = ReceiveBlocksResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blocksapi_stream_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveBlocksResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveBlocksResponse_Error) ProtoMessage() {}

func (x *ReceiveBlocksResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_blocksapi_stream_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveBlocksResponse_Error.ProtoReflect.Descriptor instead.
func (*ReceiveBlocksResponse_Error) Descriptor() ([]byte, []int) {
	return file_blocksapi_stream_proto_rawDescGZIP(), []int{3, 2}
}

func (x *ReceiveBlocksResponse_Error) GetKind() ReceiveBlocksResponse_Error_Kind {
	if x != nil {
		return x.Kind
	}
	return ReceiveBlocksResponse_Error_UNKNOWN
}

func (x *ReceiveBlocksResponse_Error) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_blocksapi_stream_proto protoreflect.FileDescriptor

var file_blocksapi_stream_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c,
	0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61, 0x70, 0x69, 0x1a, 0x17, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa8, 0x03, 0x0a, 0x11, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x65, 0x78, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x46, 0x0a, 0x12, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48,
	0x01, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x68, 0x61,
	0x72, 0x64, 0x73, 0x12, 0x5f, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x01, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x68, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x12, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x01, 0x52, 0x10, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x68, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x23, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0f, 0x0a, 0x0d,
	0x73, 0x68, 0x61, 0x72, 0x64, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xa8, 0x01,
	0x0a, 0x1b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3d, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61,
	0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61,
	0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xd4, 0x08, 0x0a, 0x14, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61,
	0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0b,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x4b, 0x0a, 0x0c, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x44, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x54, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e,
	0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x49,
	0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x44, 0x48, 0x01, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x5c, 0x0a, 0x11, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x5d, 0x0a, 0x0e, 0x63, 0x61, 0x74, 0x63, 0x68,
	0x75, 0x70, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x61, 0x74, 0x63, 0x68, 0x75,
	0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0d, 0x63, 0x61, 0x74, 0x63, 0x68, 0x75, 0x70,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x70, 0x0a, 0x19, 0x63, 0x61, 0x74, 0x63, 0x68, 0x75,
	0x70, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62, 0x6f, 0x72, 0x65,
	0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x02, 0x52, 0x17, 0x63, 0x61,
	0x74, 0x63, 0x68, 0x75, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x88, 0x01, 0x01, 0x22, 0xce, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x45, 0x41, 0x52, 0x4c, 0x49, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x56,
	0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x56, 0x41,
	0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x5f, 0x45, 0x58, 0x41, 0x43, 0x54, 0x4c, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x54, 0x41, 0x52,
	0x47, 0x45, 0x54, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x45,
	0x58, 0x41, 0x43, 0x54, 0x4c, 0x59, 0x5f, 0x41, 0x46, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x52,
	0x47, 0x45, 0x54, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4f,
	0x4e, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x4f, 0x5f, 0x54, 0x41, 0x52,
	0x47, 0x45, 0x54, 0x10, 0x04, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4f,
	0x4e, 0x5f, 0x45, 0x41, 0x52, 0x4c, 0x49, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x46, 0x54, 0x45, 0x52,
	0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x05, 0x22, 0x48, 0x0a, 0x0d, 0x43, 0x61, 0x74,
	0x63, 0x68, 0x75, 0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x41,
	0x54, 0x43, 0x48, 0x55, 0x50, 0x5f, 0x50, 0x41, 0x4e, 0x49, 0x43, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x41, 0x54, 0x43, 0x48, 0x55, 0x50, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x43, 0x41, 0x54, 0x43, 0x48, 0x55, 0x50, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x41,
	0x4d, 0x10, 0x02, 0x22, 0x4b, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x4e, 0x45, 0x56, 0x45, 0x52, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x41, 0x46, 0x54, 0x45, 0x52, 0x5f,
	0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x4f, 0x50,
	0x5f, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x02,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x63, 0x61, 0x74, 0x63, 0x68, 0x75, 0x70, 0x5f, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22,
	0xd2, 0x04, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x62, 0x6f, 0x72,
	0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61, 0x70, 0x69, 0x2e,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x47, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x62,
	0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x61, 0x70,
	0x69, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x74, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x3a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x63, 0x61, 0x74, 0x63, 0x68, 0x75, 0x70, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x61, 0x74, 0x63, 0x68,
	0x75, 0x70, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x28, 0x0a, 0x04,
	0x44, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xaf, 0x01, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x48, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34,
	0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x04,
	0x4b, 0x69, 0x6e, 0x64, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x54, 0x43, 0x48, 0x55, 0x50, 0x5f, 0x52, 0x45, 0x51,
	0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x41, 0x44, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x02, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blocksapi_stream_proto_rawDescOnce sync.Once
	file_blocksapi_stream_proto_rawDescData = file_blocksapi_stream_proto_rawDesc
)

func file_blocksapi_stream_proto_rawDescGZIP() []byte {
	file_blocksapi_stream_proto_rawDescOnce.Do(func() {
		file_blocksapi_stream_proto_rawDescData = protoimpl.X.CompressGZIP(file_blocksapi_stream_proto_rawDescData)
	})
	return file_blocksapi_stream_proto_rawDescData
}

var file_blocksapi_stream_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_blocksapi_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_blocksapi_stream_proto_goTypes = []any{
	(ReceiveBlocksRequest_StartPolicy)(0),   // 0: borealis.blocksapi.ReceiveBlocksRequest.StartPolicy
	(ReceiveBlocksRequest_CatchupPolicy)(0), // 1: borealis.blocksapi.ReceiveBlocksRequest.CatchupPolicy
	(ReceiveBlocksRequest_StopPolicy)(0),    // 2: borealis.blocksapi.ReceiveBlocksRequest.StopPolicy
	(ReceiveBlocksResponse_Error_Kind)(0),   // 3: borealis.blocksapi.ReceiveBlocksResponse.Error.Kind
	(*BlockStreamFilter)(nil),               // 4: borealis.blocksapi.BlockStreamFilter
	(*BlockStreamDeliverySettings)(nil),     // 5: borealis.blocksapi.BlockStreamDeliverySettings
	(*ReceiveBlocksRequest)(nil),            // 6: borealis.blocksapi.ReceiveBlocksRequest
	(*ReceiveBlocksResponse)(nil),           // 7: borealis.blocksapi.ReceiveBlocksResponse
	(*BlockStreamFilter_ShardList)(nil),     // 8: borealis.blocksapi.BlockStreamFilter.ShardList
	(*ReceiveBlocksResponse_Result)(nil),    // 9: borealis.blocksapi.ReceiveBlocksResponse.Result
	(*ReceiveBlocksResponse_Done)(nil),      // 10: borealis.blocksapi.ReceiveBlocksResponse.Done
	(*ReceiveBlocksResponse_Error)(nil),     // 11: borealis.blocksapi.ReceiveBlocksResponse.Error
	(*emptypb.Empty)(nil),                   // 12: google.protobuf.Empty
	(*BlockMessageDeliverySettings)(nil),    // 13: borealis.blocksapi.BlockMessageDeliverySettings
	(*BlockMessage_ID)(nil),                 // 14: borealis.blocksapi.BlockMessage.ID
	(*BlockMessage)(nil),                    // 15: borealis.blocksapi.BlockMessage
}
var file_blocksapi_stream_proto_depIdxs = []int32{
	12, // 0: borealis.blocksapi.BlockStreamFilter.exclude_headers:type_name -> google.protobuf.Empty
	12, // 1: borealis.blocksapi.BlockStreamFilter.exclude_all_shards:type_name -> google.protobuf.Empty
	8,  // 2: borealis.blocksapi.BlockStreamFilter.include_shard_list:type_name -> borealis.blocksapi.BlockStreamFilter.ShardList
	8,  // 3: borealis.blocksapi.BlockStreamFilter.exclude_shard_list:type_name -> borealis.blocksapi.BlockStreamFilter.ShardList
	4,  // 4: borealis.blocksapi.BlockStreamDeliverySettings.filter:type_name -> borealis.blocksapi.BlockStreamFilter
	13, // 5: borealis.blocksapi.BlockStreamDeliverySettings.content:type_name -> borealis.blocksapi.BlockMessageDeliverySettings
	0,  // 6: borealis.blocksapi.ReceiveBlocksRequest.start_policy:type_name -> borealis.blocksapi.ReceiveBlocksRequest.StartPolicy
	14, // 7: borealis.blocksapi.ReceiveBlocksRequest.start_target:type_name -> borealis.blocksapi.BlockMessage.ID
	2,  // 8: borealis.blocksapi.ReceiveBlocksRequest.stop_policy:type_name -> borealis.blocksapi.ReceiveBlocksRequest.StopPolicy
	14, // 9: borealis.blocksapi.ReceiveBlocksRequest.stop_target:type_name -> borealis.blocksapi.BlockMessage.ID
	5,  // 10: borealis.blocksapi.ReceiveBlocksRequest.delivery_settings:type_name -> borealis.blocksapi.BlockStreamDeliverySettings
	1,  // 11: borealis.blocksapi.ReceiveBlocksRequest.catchup_policy:type_name -> borealis.blocksapi.ReceiveBlocksRequest.CatchupPolicy
	5,  // 12: borealis.blocksapi.ReceiveBlocksRequest.catchup_delivery_settings:type_name -> borealis.blocksapi.BlockStreamDeliverySettings
	9,  // 13: borealis.blocksapi.ReceiveBlocksResponse.message:type_name -> borealis.blocksapi.ReceiveBlocksResponse.Result
	10, // 14: borealis.blocksapi.ReceiveBlocksResponse.done:type_name -> borealis.blocksapi.ReceiveBlocksResponse.Done
	11, // 15: borealis.blocksapi.ReceiveBlocksResponse.error:type_name -> borealis.blocksapi.ReceiveBlocksResponse.Error
	15, // 16: borealis.blocksapi.ReceiveBlocksResponse.Result.message:type_name -> borealis.blocksapi.BlockMessage
	3,  // 17: borealis.blocksapi.ReceiveBlocksResponse.Error.kind:type_name -> borealis.blocksapi.ReceiveBlocksResponse.Error.Kind
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_blocksapi_stream_proto_init() }
func file_blocksapi_stream_proto_init() {
	if File_blocksapi_stream_proto != nil {
		return
	}
	file_blocksapi_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_blocksapi_stream_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BlockStreamFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocksapi_stream_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BlockStreamDeliverySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocksapi_stream_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiveBlocksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocksapi_stream_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiveBlocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocksapi_stream_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BlockStreamFilter_ShardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocksapi_stream_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiveBlocksResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocksapi_stream_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiveBlocksResponse_Done); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blocksapi_stream_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiveBlocksResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_blocksapi_stream_proto_msgTypes[0].OneofWrappers = []any{
		(*BlockStreamFilter_ExcludeHeaders)(nil),
		(*BlockStreamFilter_ExcludeAllShards)(nil),
		(*BlockStreamFilter_IncludeShardList)(nil),
		(*BlockStreamFilter_ExcludeShardList)(nil),
	}
	file_blocksapi_stream_proto_msgTypes[2].OneofWrappers = []any{}
	file_blocksapi_stream_proto_msgTypes[3].OneofWrappers = []any{
		(*ReceiveBlocksResponse_Message)(nil),
		(*ReceiveBlocksResponse_Done_)(nil),
		(*ReceiveBlocksResponse_Error_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blocksapi_stream_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blocksapi_stream_proto_goTypes,
		DependencyIndexes: file_blocksapi_stream_proto_depIdxs,
		EnumInfos:         file_blocksapi_stream_proto_enumTypes,
		MessageInfos:      file_blocksapi_stream_proto_msgTypes,
	}.Build()
	File_blocksapi_stream_proto = out.File
	file_blocksapi_stream_proto_rawDesc = nil
	file_blocksapi_stream_proto_goTypes = nil
	file_blocksapi_stream_proto_depIdxs = nil
}
